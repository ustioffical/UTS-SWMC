"""
Django settings for LWMC_310 project.

Generated by 'django-admin startproject' using Django 5.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import os
from pathlib import Path
from datetime import timedelta

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
PROJECT_ROOT = os.path.abspath(os.path.dirname(__file__))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-lfq#ft9tdkheu_af%)si2cwhldn=@2te)o$tz852^#3-5%mf-s'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.gis',
    'django.contrib.humanize',
    'rest_framework',
    'djoser',
    'drf_spectacular',
    'AppAdmin.apps.AppadminConfig',
    'AppAccount.apps.AppaccountConfig',
    'AppMapping.apps.AppmappingConfig',
    'AppSetting.apps.AppsettingConfig',
    'AppAsset.apps.AppassetConfig',
    'AppRoute.apps.ApprouteConfig',
    'AppVehicle.apps.AppvehicleConfig',
    'AppReport.apps.AppreportConfig',
    'AppCore.apps.AppcoreConfig',
    # 'Communication.apps.CommunicationConfig',
    'VTMS',
    'VTCS',
    'DataLogs',
    'PITB_API_DATA',
    'django_filters',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'LWMC_310.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'LWMC_310.wsgi.application'

# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        # 'ENGINE': 'django.db.backends.sqlite3',
        # 'NAME': BASE_DIR / 'db.sqlite3',

        # # ## Local Settings
        # 'ENGINE': 'django.contrib.gis.db.backends.postgis',
        # 'NAME': 'db_sgi_sahiwal',
        # 'USER': 'postgres',
        # 'PASSWORD': '123',
        # 'PORT': '5434',
        # 'HOST': 'localhost',

        ### Server Settings
        'ENGINE': 'django.contrib.gis.db.backends.postgis',
        ###'NAME': 'db_fsd_suthra',
        'NAME': 'db_sgi_sahiwal',
        'USER': 'postgres',
        'PASSWORD': 'UTS@2025GIS$team',
        'PORT': '5432',
        'HOST': '185.228.92.25',

    }
}

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

REST_FRAMEWORK = {
    'COERCE_DECIMAL_TO_STRING': False,
    'DEFAULT_FILTER_BACKENDS': ['django_filters.rest_framework.DjangoFilterBackend'],
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
    # Add this line to set the default schema class
    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',
}

SIMPLE_JWT = {
    'AUTH_HEADER_TYPES': ('JWT',),
    'ACCESS_TOKEN_LIFETIME': timedelta(days=1),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=2),
    'ROTATE_REFRESH_TOKENS': True,
    'UPDATE_LAST_LOGIN': True,
}

DJOSER = {
    'SET_PASSWORD_RETYPE': True,
    # 'USERNAME_CHANGED_EMAIL_CONFIRMATION':True,
    # 'PASSWORD_CHANGED_EMAIL_CONFIRMATION':True,
    'PASSWORD_RESET_CONFIRM_URL': "password-reset/{uid}/{token}",
    'PASSWORD_RESET_SHOW_EMAIL_NOT_FOUND': True,
    'SERIALIZERS': {
        'user_create': 'AppCore.serializers.UserCreateSerializer',
        'user': 'AppCore.serializers.UserSerializer',
    }
}

# Set the custom User model
AUTH_USER_MODEL = 'AppCore.User'

EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Karachi'

USE_I18N = True

WAGTAIL_I18N_ENABLED = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_ROOT = os.path.join(PROJECT_ROOT, "../static_root")
STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(PROJECT_ROOT, "../static"),
]

MEDIA_ROOT = os.path.join(PROJECT_ROOT, 'media')
MEDIA_URL = '/media/'

GDAL_LIBRARY_PATH = os.environ.get('GDAL_LIBRARY_PATH')

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

# DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Configure Spectacular settings
SPECTACULAR_SETTINGS = {
    'TITLE': 'GEO UTI API',
    'DESCRIPTION': 'API For Geolocation',
    'VERSION': '1.0.0',
    'SERVE_INCLUDE_SCHEMA': False,
}

CELERY_BROKER_URL = 'redis://localhost:6379/1'

CELERY_BEAT_SCHEDULE = {
    'UTSPostVTMSBulkBackgroundTask': {
        'task': 'AppVehicle.tasks.UTSPostVTMSBulkBackgroundTask',
        'schedule': timedelta(seconds=30),  # Run every 2 minutes minutes=1, seconds=20
    },
}
# CELERY_BEAT_SCHEDULE = {
#     'UTSPostVTMSBulkBackgroundTask_DayWise': {
#         'task': 'AppVehicle.tasks.UTSPostVTMSBulkBackgroundTask_DayWise',
#         'schedule': timedelta(minutes=1),  # Run every 2 minutes
#     },
#     'UTSPostVTMSBulkBackendMissingVehicles':{
#         'task':'AppVehicle.tasks.UTSPostVTMSBulkBackendMissingVehicles',
#         'schedule': timedelta(minutes=15) # Run after every 15 min
#     },
#     # The missing vehicle task
#     'process-pending-vehicle-gprs-data': {
#         'task': 'AppVehicle.tasks.process_pending_vehicle_gprs_data',
#         'schedule': timedelta(minutes=5),  # Run every 5 minutes (300 seconds)
#     },
# }

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
            'formatter': 'simple',
        },
    },
    'formatters': {
        'simple': {
            'format': '[%(levelname)s] %(asctime)s %(name)s: %(message)s',
        },
    },
    'loggers': {
        '': {  # root logger
            'handlers': ['console'],
            'level': 'INFO',
        },
        'django': {
            'handlers': ['console'],
            'level': 'INFO',
            'propagate': False,
        },
    },
}